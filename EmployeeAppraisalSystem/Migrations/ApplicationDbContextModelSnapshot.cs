// <auto-generated />
using System;
using EmployeeAppraisalSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeAppraisalSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Appraisal", b =>
                {
                    b.Property<int>("AppraisalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppraisalID"));

                    b.Property<int>("AppraisalPeriodID")
                        .HasColumnType("int");

                    b.Property<string>("ApproverComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ObjectiveID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppraisalID");

                    b.HasIndex("AppraisalPeriodID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ObjectiveID");

                    b.ToTable("Appraisals");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.AppraisalPeriod", b =>
                {
                    b.Property<int>("AppraisalPeriodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppraisalPeriodID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportingEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportingStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AppraisalPeriodID");

                    b.ToTable("AppraisalPeriods");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Contract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"));

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Objective", b =>
                {
                    b.Property<int>("ObjectiveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectiveID"));

                    b.Property<DateTime>("ActivityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActivityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("NameOfTheObjective")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjectiveID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Appraisal", b =>
                {
                    b.HasOne("EmployeeAppraisalSystem.Models.AppraisalPeriod", "AppraisalPeriod")
                        .WithMany("Appraisals")
                        .HasForeignKey("AppraisalPeriodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeAppraisalSystem.Models.Employee", "Employee")
                        .WithMany("Appraisals")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeAppraisalSystem.Models.Objective", "Objective")
                        .WithMany("Appraisals")
                        .HasForeignKey("ObjectiveID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppraisalPeriod");

                    b.Navigation("Employee");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Contract", b =>
                {
                    b.HasOne("EmployeeAppraisalSystem.Models.Employee", "Employee")
                        .WithMany("Contracts")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Objective", b =>
                {
                    b.HasOne("EmployeeAppraisalSystem.Models.Employee", "Employee")
                        .WithMany("Objectives")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.AppraisalPeriod", b =>
                {
                    b.Navigation("Appraisals");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Employee", b =>
                {
                    b.Navigation("Appraisals");

                    b.Navigation("Contracts");

                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("EmployeeAppraisalSystem.Models.Objective", b =>
                {
                    b.Navigation("Appraisals");
                });
#pragma warning restore 612, 618
        }
    }
}
